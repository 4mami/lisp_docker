name: Build roswell:19.09.12.102-alpine

on:
  push:
    paths:
      - 'roswell/alpine/Dockerfile'
      - '.github/workflows/docker-build-roswell-19.09.12.102-alpine.yml'

env:
  IMAGE: roswell
  VERSION: 19.09.12.102
  TARGET: alpine

jobs:
  build:
    name: Build Docker images
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@master
      - name: Login to GitHub Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u "${GITHUB_REPOSITORY%/*}" --password-stdin
      - name: Build $IMAGE image
        run: docker build -t "docker.pkg.github.com/${{ github.repository }}/$IMAGE:$VERSION-$TARGET" --build-arg VERSION="$VERSION" "$IMAGE/$TARGET/"
      - name: Save $IMAGE image
        run: docker push "docker.pkg.github.com/${{ github.repository }}/$IMAGE:$VERSION-$TARGET"

  publish:
    name: Publish Docker images
    runs-on: ubuntu-18.04
    needs: build
    if: github.ref == 'refs/heads/master'

    steps:
      - uses: actions/checkout@master
      - name: Extract owner name
        shell: bash
        run: echo "##[set-output name=owner;]$(echo ${GITHUB_REPOSITORY%/*})"
        id: info
      - name: Login to GitHub Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u "${{ steps.info.outputs.owner }}" --password-stdin
      - name: Pull $IMAGE image
        run: |
          docker pull "docker.pkg.github.com/${{ github.repository }}/$IMAGE:$VERSION-$TARGET"
          docker tag "docker.pkg.github.com/${{ github.repository }}/$IMAGE:$VERSION-$TARGET" "${{ steps.info.outputs.owner }}/$IMAGE:$VERSION-$TARGET"
      - name: Login to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ steps.info.outputs.owner }}" --password-stdin
      - name: Publish $IMAGE image
        run: docker push "${{ steps.info.outputs.owner }}/$IMAGE:$VERSION-$TARGET"
      - name: Publish the default $IMAGE
        if: env.TARGET == 'debian'
        run: |
          docker tag "${{ steps.info.outputs.owner }}/$IMAGE:$VERSION-$TARGET" "${{ steps.info.outputs.owner }}/$IMAGE:$VERSION"
      - name: Update the latest $IMAGE images
        run: |
          if [ "$VERSION" = "$(cat $IMAGE/versions | sort -Vr | head -n 1)" ]; then
            docker tag "${{ steps.info.outputs.owner }}/$IMAGE:$VERSION-$TARGET" "${{ steps.info.outputs.owner }}/$IMAGE:latest-$TARGET"
            docker push "${{ steps.info.outputs.owner }}/$IMAGE:latest-$TARGET"

            if [ "$TARGET" == "debian" ]; then
              docker tag "${{ steps.info.outputs.owner }}/$IMAGE:$VERSION" "${{ steps.info.outputs.owner }}/$IMAGE:latest"
              docker push "${{ steps.info.outputs.owner }}/$IMAGE:latest"
            fi
          fi
