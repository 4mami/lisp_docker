name: Build and publish %%IMAGE%%:%%VERSION%% image

on:
  push:
    paths:
      - '%%IMAGE%%/%%VERSION%%/**'
      - '.github/workflows/docker-build-%%IMAGE%%-%%VERSION%%.yml'

env:
  LATEST: %%LATEST%%

jobs:
  build:
    name: Build Docker images
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@master
      - name: Login to GitHub Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u "${GITHUB_REPOSITORY%/*}" --password-stdin
      - name: Build %%IMAGE%% Debian image
        run: docker build -t "docker.pkg.github.com/${{ github.repository }}/%%IMAGE%%:%%VERSION%%" "%%IMAGE%%/%%VERSION%%"
      - name: Save %%IMAGE%% Debian image
        run: docker push "docker.pkg.github.com/${{ github.repository }}/%%IMAGE%%:%%VERSION%%"
      - name: Build %%IMAGE%% Alpine image
        run: docker build -t "docker.pkg.github.com/${{ github.repository }}/%%IMAGE%%:%%VERSION%%-alpine" "%%IMAGE%%/%%VERSION%%/alpine"
      - name: Save %%IMAGE%% Alpine image
        run: docker push "docker.pkg.github.com/${{ github.repository }}/%%IMAGE%%:%%VERSION%%-alpine"

  publish:
    name: Publish Docker images
    runs-on: ubuntu-18.04
    needs: build
    if: github.ref == 'refs/heads/master'

    steps:
      - uses: actions/checkout@master
      - name: Extract owner name
        shell: bash
        run: echo "##[set-output name=owner;]$(echo ${GITHUB_REPOSITORY%/*})"
        id: info
      - name: Login to GitHub Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u "${{ steps.info.outputs.owner }}" --password-stdin
      - name: Pull %%IMAGE%% Debian image
        run: |
          docker pull "docker.pkg.github.com/${{ github.repository }}/%%IMAGE%%:%%VERSION%%"
          docker tag "docker.pkg.github.com/${{ github.repository }}/%%IMAGE%%:%%VERSION%%" "${{ steps.info.outputs.owner }}/%%IMAGE%%:%%VERSION%%"
      - name: Pull %%IMAGE%% Alpine image
        run: |
          docker pull "docker.pkg.github.com/${{ github.repository }}/%%IMAGE%%:%%VERSION%%-alpine"
          docker tag "docker.pkg.github.com/${{ github.repository }}/%%IMAGE%%:%%VERSION%%-alpine" "${{ steps.info.outputs.owner }}/%%IMAGE%%:%%VERSION%%-alpine"
      - name: Login to Docker Hub
        run: |
          echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | docker login -u "${{ steps.info.outputs.owner }}" --password-stdin
      - name: Publish %%IMAGE%% Debian image
        run: docker push "${{ steps.info.outputs.owner }}/%%IMAGE%%:%%VERSION%%"
      - name: Publish %%IMAGE%% Alpine image
        run: docker push "${{ steps.info.outputs.owner }}/%%IMAGE%%:%%VERSION%%-alpine"
      - name: Update the latest %%IMAGE%% Debian image
        if: env.LATEST == 1
        run: |
          docker tag "${{ steps.info.outputs.owner }}/%%IMAGE%%:%%VERSION%%" "${{ steps.info.outputs.owner }}/%%IMAGE%%:latest"
          docker tag "${{ steps.info.outputs.owner }}/%%IMAGE%%:%%VERSION%%-alpine" "${{ steps.info.outputs.owner }}/%%IMAGE%%:latest-alpine"
          docker push "${{ steps.info.outputs.owner }}/%%IMAGE%%:latest"
          docker push "${{ steps.info.outputs.owner }}/%%IMAGE%%:latest-alpine"
